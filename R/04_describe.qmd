## Load libraries

```{r}
#| message: false
library(readr)
library(dplyr)
library(tidyr)
```

## Data describe

```{r}
# Define a vector of numeric feature names
numeric_columns <- names(data)[sapply(data, is.numeric)]

#features_num <- setdiff(numeric_columns, c("Dukes Stage", "Gender", "Location"))
data_filtered <- data |>
  select(-Gender, -Location,-`Dukes Stage`)
# Select numeric columns based on features_num
numeric_data <- data[ , features_num, drop = FALSE]

# Define custom percentiles
percentiles <- c(0.1, 0.25, 0.5, 0.75, 0.9)

# Compute summary statistics for each numeric feature
summary_stats <- data_filtered  %>%
  summarise(across(everything(), list(
    min = ~ min(.x, na.rm = TRUE),
    `10%` = ~ quantile(.x, probs = 0.1, na.rm = TRUE),
    Q1 = ~ quantile(.x, probs = 0.25, na.rm = TRUE),
    median = ~ median(.x, na.rm = TRUE),
    Q3 = ~ quantile(.x, probs = 0.75, na.rm = TRUE),
    `90%` = ~ quantile(.x, probs = 0.9, na.rm = TRUE),
    max = ~ max(.x, na.rm = TRUE),
    mean = ~ mean(.x, na.rm = TRUE),
    sd = ~ sd(.x, na.rm = TRUE)
  )))
#Format the summary statistics into a table
summary_table_long <- summary_stats %>%
  pivot_longer(
    cols = everything(),
    names_to = c("Feature", "Statistic"),
    names_sep = "_",
    values_to = "Value"
  ) %>%
  arrange(Feature, Statistic)

#Transform back to wide format
summary_table_wide <- summary_table_long %>%
  pivot_wider(
    names_from = Statistic,
    values_from = Value
  )

# Print the wide table
print(summary_table_wide)
```

Inspect the dataset:

```{r}
data 
```

The final dataframe contains 62 observations(rows) and 1946 variables(columns). Each observation is a colorectal cancer sample. Of the 1946 variables, 1 is the sample ID, 10 are the sample metadata, and the remaining 1935 variables are different genes whose expression is measured.

The variables Age and Age_group contain the same information, just in a different format. The same goes for Dukes_stage and No_stage.

The variables DFS and DFS event both give information on Disease-Free Survival. DFS describes the length of time without the disease returning, and DFS event describes whether or not the disease returned.

```{r}
data |>
  DFS_event

```
