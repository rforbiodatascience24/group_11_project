```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```

## Load libraries

```{r}
#| message: false
library(readr)
library(dplyr)
library(tidyr)
library(tidyverse)
```

## Loading the data:

```{r}
data <- read_tsv("data/03_dat_aug.tsv")
```

## Inspect the dataset

```{r}
data
```

The final dataframe contains 62 observations(rows) and 1946 variables(columns). Each observation is a colorectal cancer sample. Of the 1946 variables, 1 is the sample ID, 10 are the sample metadata, and the remaining 1935 variables are different genes whose expression is measured.

The variables Age and Age_group contain the same information, just in a different format. The same goes for Dukes_stage and No_stage.

The variables DFS and DFS event both give information on Disease-Free Survival. DFS describes the length of time without the disease returning, and DFS event describes whether or not the disease returned.

```{r}
data |>
  count(DFS_event)
```

Out of the 62 patients, 25 showed disease free survival, while 37 showed a return of the disease.

## Describe the dataset

Age and DFS 'Simple statistics

The relationship between age and DFS

```{r}
# Compute summary statistics for each numeric feature
data |>
  select(Age, DFS) |> 
  summarise(across(everything(), list(
    min = min,
    max = max,
    mean = mean,
    sd = sd
  ), na.rm = TRUE)) |> #Format the summary statistics into a table
  pivot_longer(
    cols = everything(),
    names_to = c("Feature", "Statistic"),
    names_sep = "_",
    values_to = "Value"
  ) |>
  arrange(Feature, Statistic) |> #Transform back to wide format
  pivot_wider(
    names_from = Statistic,
    values_from = Value
  )
```

## Visualizing data

```{r}
pl <- data |>
  count(Gender) |> 
  ggplot(aes(x = factor(Gender),
             y = n,
             fill = Gender)) + 
  geom_col(colour = "black",
    alpha = 0.5) +
  labs(title = "Gender Distribution", 
       x = "Gender", 
       y = "Count", 
       fill = "Gender") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        axis.title.x = element_text(size = 14, face = "bold"),
    axis.title.y = element_text(size = 14, face = "bold"))

pl |> 
  ggsave(filename = "04_gender_distribution.png",
         path ="results/")

pl
```

```{r}
pl <- data |>
  count(Gender, Age_group)|>
  ggplot(aes(x = Age_group,
             y = n,
             fill = Gender)) +
  labs(title = "The Gender Distribution Across Age Groups Chart", 
       x = "Gender", 
       y = "Count", 
       fill = "Gender"
  ) +
  geom_col(position = position_dodge(
    preserve = "single"),
    colour = "black",
    alpha = 0.5) +
  geom_hline(yintercept = 0) +
  theme_minimal() +
  theme(legend.position = "bottom",
        panel.grid.major.x = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
       axis.text.x = element_text(angle = 45, hjust = 1), 
       axis.title.x = element_text(size = 10, face = "bold"),  # Modify x-axis title font size and make it bold
      axis.title.y = element_text(size = 10, face = "bold") # Modify y-axis title font size and make it italic
    )

pl |> 
  ggsave(filename = "04_gender_age_group_distribution.png",
         path = "results/")

pl
```

```{r}
pl <- data|>
  count(Dukes_stage) |> 
  ggplot(aes(x = Dukes_stage, 
             y = n,
             fill = Dukes_stage)) +
  labs(title = "Duke stage distribution", 
       x = "Duke stage", 
       y = "Count", 
       fill = "Duke stage"
  ) +
  geom_col(colour = "black",
           alpha = 0.5) +
  geom_hline(yintercept = 0) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, 
                                     hjust = 1))

pl |> 
  ggsave(filename = "04_dukes_stage_distribution.png",
         path = "results/")


pl
```

```{r}
pl <- data|>
  count(Location) |> 
  ggplot(aes(x = Location, 
             y = n,
             fill = Location)) +
  labs(title = "Location distribution", 
       x = "Location", 
       y = "Count", 
       fill = "Location"
  ) +
  geom_col(colour = "black",
           alpha = 0.5) +
  theme_minimal() +
  geom_hline(yintercept = 0) +
  theme(axis.text.x = element_text(angle = 45, 
                                     hjust = 1))

pl |> 
  ggsave(filename = "04_dukes_stage_distribution.png",
         path =  "results/")


pl
```

```{r}
pl <- data |> 
  ggplot(aes(x = Age, 
             y = DFS)) +
  geom_point(color ="lightblue") +               
  labs(title = "DFS vs Age",
       x = "Age",
       y = "DFS (months)") +
  theme_minimal()

pl |> 
  ggsave(filename = "04_DFS_age_distribution.png",
         path = "results/")


pl
```
