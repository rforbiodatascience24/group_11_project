## Load libraries

```{r}
#| message: false
library(readr)
library(tidyverse)
```

## Loading clean data

```{r}
project_path <- "~/projects/group_11_project/"
data <- read_tsv(str_c(project_path, "/data/02_dat_clean.tsv"))
```

## Set project path

```{r}
project_path <- "~/projects/group_11_project/"
data <- read_tsv(str_c(project_path, "/data/02_dat_clean.tsv"))
```

## Loading the data:

```{r}
data <- read_tsv(str_c(project_path, "data/02_dat_clean.tsv"))
```

## Inspect the dataset:

```{r} 
data
```
## Data describe

The final dataframe contains 62 observations(rows) and 1946 variables(columns). Each observation is a colorectal cancer sample. Of the 1946 variables, 1 is the sample ID, 10 are the sample metadata, and the remaining 1935 variables are different genes whose expression is measured.

The variables Age and Age_group contain the same information, just in a different format. The same goes for Dukes_stage and No_stage.

The variables DFS and DFS event both give information on Disease-Free Survival. DFS describes the length of time without the disease returning, and DFS event describes whether or not the disease returned.

```{r} data |>   DFS_event}
```

## Describe the dataset
```

Age and DFS 'Simple statistics

The relationship between age and DFS

```{r}
# Define a vector of numeric feature names
features_num <- c("Age", "DFS")
# Select numeric columns based on features_num
numeric_data <- data[ , features_num, drop = FALSE]

# Compute summary statistics for each numeric feature
summary_stats <- numeric_data |>
  summarise(across(everything(), list(
    min = min,
    max = max,
    mean = mean,
    sd = sd
  ), na.rm = TRUE))

#Format the summary statistics into a table
summary_table_long <- summary_stats %>%
  pivot_longer(
    cols = everything(),
    names_to = c("Feature", "Statistic"),
    names_sep = "_",
    values_to = "Value"
  ) %>%
  arrange(Feature, Statistic)

#Transform back to wide format
summary_table_wide <- summary_table_long %>%
  pivot_wider(
    names_from = Statistic,
    values_from = Value
  )

# Print the wide table
print(summary_table_wide)
```


