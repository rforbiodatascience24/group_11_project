## Load libraries

```{r}
#| message: false
library(readr)
library(dplyr)
library(tidyr)
```

## Data describe

```{r}

# Check for missing values
sum(is.na(data))  # Total number of NA values in the dataset

```

```{r}
# Define a vector of numeric feature names
numeric_columns <- names(data)[sapply(data, is.numeric)]

#features_num <- setdiff(numeric_columns, c("Dukes Stage", "Gender", "Location"))
data_filtered <- data |>
  select(-Gender, -Location,-`Dukes Stage`)
# Select numeric columns based on features_num
numeric_data <- data[ , features_num, drop = FALSE]

# Define custom percentiles
percentiles <- c(0.1, 0.25, 0.5, 0.75, 0.9)

# Compute summary statistics for each numeric feature
summary_stats <- data_filtered  %>%
  summarise(across(everything(), list(
    min = ~ min(.x, na.rm = TRUE),
    `10%` = ~ quantile(.x, probs = 0.1, na.rm = TRUE),
    Q1 = ~ quantile(.x, probs = 0.25, na.rm = TRUE),
    median = ~ median(.x, na.rm = TRUE),
    Q3 = ~ quantile(.x, probs = 0.75, na.rm = TRUE),
    `90%` = ~ quantile(.x, probs = 0.9, na.rm = TRUE),
    max = ~ max(.x, na.rm = TRUE),
    mean = ~ mean(.x, na.rm = TRUE),
    sd = ~ sd(.x, na.rm = TRUE)
  )))
=======
## Load the data

```{r}
project_path <- "~/projects/group_11_project/"
data <- read_tsv(str_c(project_path, "/data/03_dat_aug.tsv"))
```

## Data describe

```{r}
# Define a vector of numeric feature names
features_num <- c("Age (in years)", "DFS (in months)")
# Select numeric columns based on features_num
numeric_data <- data[ , features_num, drop = FALSE]


# Compute summary statistics for each numeric feature
summary_stats <- numeric_data |>
  summarise(across(everything(), list(
    min = min,
    max = max,
    mean = mean,
    sd = sd
  ), na.rm = TRUE))

>>>>>>> 219ff197b2d24e5d3c0b1e83dc440c788fd3b792
#Format the summary statistics into a table
summary_table_long <- summary_stats %>%
  pivot_longer(
    cols = everything(),
    names_to = c("Feature", "Statistic"),
    names_sep = "_",
    values_to = "Value"
  ) %>%
  arrange(Feature, Statistic)

#Transform back to wide format
summary_table_wide <- summary_table_long %>%
  pivot_wider(
    names_from = Statistic,
    values_from = Value
  )

# Print the wide table
print(summary_table_wide)
```

Inspect the dataset:

```{r}
data
```

The final dataframe contains 62 observations(rows) which are described by 64 variables.

```{r}
patient_data
```
