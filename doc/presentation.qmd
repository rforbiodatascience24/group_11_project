---
title: "Group 11 - Gene Expression in Colorectal Cancer"
author: "Eleni-Sofia Tseperi (s240066),	Johanne Lund	(s233246), Marie Picquet	(s233736), Eglantine Anton	(s233242), Qiuyan Wu	(s241063)"
format:
  revealjs:
    code-line-numbers: true
    scrollable: true
    smaller: true
    scoll: true
    theme: night
    transition: slide
    incremental: true 
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(readr)
library(broom)
library(here)
library(ggrepel)
```

## Introduction

-   Background

    -   Colorectal Cancer (CRC) is a major cause of cancer mortality

    -   Gene Expression Analysis can help identify disregulated genes

-   Goal of the project

    -   Investigate if the gene expression data can be used to build predictive models for CRC diagnosis

-   Dataset found on Kaggle

    -   Gene expression level for 1935 genes

    -   Patient information for 62 patients

## Methods overview

-   The run-all file 00_all.qmd is used to run the entire project

[![](images/Overview_img.png)](https://r4bds.github.io/project_description.html)

-   Data is loaded from Kaggle into the folder /data/\_raw

    -   1 Patient Data File and 1 Gene Expression Data File

    -   Artificially made dirty and messy to increase the difficulty of the projects

## Methods - Tidy, clean & augment

::: columns
::: {.column width="50%" style="font-size: 22px"} \### Tidy

-   Expression data

    -   The columns represent observations and the rows variables -\> Pivot the data set

-   Patient data

-   Convert `DFS (in years and months)` into months to have only value per observation
:::

::: {.column align="center" width="100%" height="auto" style="font-size: 22px" align="center"}
:::

# Combine the two data sets by joining on the patient ID

```         
-   Separate `DFS event/Adj_Radio/Adj_Chem` into 3 distinct variables

-   Convert `DFS (in years and months)` into months to have only value per observation
```

-   Combine the two data sets by joining on the patient ID :::

::: {.column width="50%" style="font-size: 22px"} Clean

::: columns
::: {.column width="50%" height="auto" style="font-size: 22px"}
# **Cleaning row value**

-   Cleaning row value

    -   Handle Missing Values ("NA" and "N/A")

    -   Standardize Gender Labels

    -   Fix Invalid Age Values

-   Removed rows where ID_REF does not start with GSM
:::

::: {.column width="50%" height="auto" style="font-size: 22px"}
# **Cleaning column names**

```         
-   Remove empty row
```

-   Cleaning column names

    -   Make the name shorter (remove units, spaces...)

Augment

-   

    # Replace spaces by \_:

-   Create `age_group`, `metastasis` and `DFS_label` variable
:::
:::

## Methods - Describe

::: columns
::: {.column width="30%" height="auto" style="font-size: 22px"}
-   Create an `age_group` variable

```{r}
#| echo: true
#| eval: false
data <- data |>mutate(Age_group = cut(Age, breaks = seq(10, 100, by = 10)))
```
:::

::: {.column width="30%" height="auto" style="font-size: 22px"}
-   Create a `metastasis` variable

```{r}
#| echo: true
#| eval: false
data <- data |>
  mutate(No_stage = case_when(Dukes_stage == "A" ~ 1,
                            Dukes_stage == "B" ~ 2,
                            Dukes_stage == "C" ~ 3,
                            Dukes_stage == "D" ~ 4),
         metastasis = case_when(No_stage <= 3 ~ 0,
                                No_stage > 3 ~ 1))
```
:::

::: {.column width="30%" height="auto" style="font-size: 22px"}
-   Create an `DFS_label` variable
:::

```{r}
#| echo: true
#| eval: false
data <- data |>
  mutate(DFS_label = case_when(DFS_event == 0 ~ "No return of disease",
                            DFS_event == 1 ~ "Return of disease"), .after = DFS_event)
```
:::

# \## Methods - Describe

## Results - Data description

## Principal Component Analysis

We are finding tendencies in the data, looking at its spread, and trying to visualise the clustering of Duke stages, gender, or location of the tumour.

::: columns
::: {.column width="50%"}
![](images/05_pca_scree_plot.png){width="272" height="20"}

![](images/05_pca_gender.png){width="246" height="20"}
:::

::: {.column width="50%"}
![](images/05_pca_Dukes_stages.png)

![](images/05_pca_location.png){width="253" height="20"}
:::
:::

## Methods - Analysis 2

### Aim

Identify genes that are significantly up- or down-regulated between the patients with/without metastasis

::: columns
::: {.column width="40%" style="font-size: 22px"}
1.  Pivot the data
2.  Group per gene and nest the data
3.  Fit a linear model per gene
4.  Tidy the fitted model and get confidence intervals
5.  Extract the model parameters and correct for multiple testing
:::

::: {.column width="60%" style="font-size: 22px"}
```{r}
#| echo: true
#| eval: false
data_long_nested <- data |>
  select(ends_with("_at"), metastasis) |> 
  pivot_longer(cols = ends_with("_at"), 
               names_to = "gene", 
               values_to = "log2_expr_level") |> 
  group_by(gene) |> 
  nest() |> 
  ungroup()

data_long_nested <- data_long_nested |> 
  group_by(gene) |> 
  mutate(model_object = map(.x = data,
                   .f = ~lm(formula = log2_expr_level ~ metastasis,
                            data = .x))) |> 
  ungroup() |> 
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~tidy(x =.x,
                                            conf.int = TRUE,
                                            conf.level = 0.95)))

estimates <- data_long_nested |> 
  unnest(model_object_tidy) |> 
  filter(term == "metastasis") |> 
  select("gene", "p.value", "estimate", "conf.low", "conf.high") |> 
  mutate(q.value = p.adjust(p.value),
         is_significant = case_when(q.value > 0.05 ~ "no",
                                    q.value <= 0.05 ~ "yes"))

```
:::
:::

## Methods - Analysis 3

## Results - Analysis 1 & 2

::: columns
::: {.column width="50%" style="font-size: 22px"}
Analysis 1
:::

::: {.column width="50%" style="font-size: 22px"}
Analysis 2

-   No gene found to be significant after multiple testing

-   Use the genes with p\<0.01 for the plot

-   20 genes (12 up regulated, 8 down regulated)

![](images/06_analysis_volcano-02.png)
:::
:::

## Results analysis 3 & Discussion
