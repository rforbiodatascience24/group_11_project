---
title: "Gene Expression Analysis of Colorectal Cancer Samples"
author: "Group 11: Eleni-Sofia Tseperi (s240066),	Johanne Lund	(s233246), Marie Picquet	(s233736), Eglantine Anton	(s233242), Qiuyan Wu	(s241063)"
format:
  revealjs:
    code-line-numbers: true
    scrollable: true
    smaller: true
    scoll: true
    theme: simple
    transition: slide
    incremental: true 
editor: visual
---


## Introduction

-   Background:

    -   Colorectal cancer (CRC) is a major cause of cancer mortality

    -   Gene expression analysis can help identify dysregulated genes

-   Goal of the project:

    -   Investigate if the gene expression data can be used to build predictive models for CRC diagnosis

-   Data:

    -   62 colorectal cancer samples

        -   Gene expression level for 1935 genes

        -   Patient metadata on 8 variables

## Methods

-   The run-all file 00_all.qmd is used to run the entire project

![](images/Overview_img.png)

-   The analysis is done on gene expression data of colorectal cancer samples

-   Data is loaded from Kaggle into the folder /data/\_raw

    -   1 Gene Expression Data File and 1 Patient Metadata File

    -   Artificially made dirty and messy to increase the difficulty of the projects

## Methods

::: columns
::: {.column width="50%" style="font-size: 22px"}
### Tidy

-   Expression data

    -   The columns represent observations and the rows variables -\> Pivot the data set

-   Patient data

    -   Separate `DFS event/Adj_Radio/Adj_Chem` into 3 distinct variables

    -   Convert `DFS (in years and months)` into months to have only value per observation

-   Combine the two data sets by joining on the patient ID
:::

::: {.column width="50%" style="font-size: 22px"}
### Clean

-   Cleaning row value

    -   Handle Missing Values ("NA" and "N/A")

    -   Standardize Gender Labels

    -   Fix Invalid Age Value

    -   Remove empty row

-   Cleaning column names

    -   Make the name shorter (remove units, spaces...)

### Augment

-   Create `age_group`, `metastasis` and `DFS_label` variable
:::
:::

## Data Description

should somewhere say the what the variables of the metadata are (gender, age, blabla)

idk if you want to have it here or in the introduction or idk, but we should describe the raw data a bit

## Analyses:

1.  pca
2.  sfsd
3.  das

methods for pca

## Principal Component Analysis

We are finding tendencies in the data, looking at its spread, and trying to visualise the clustering of Duke stages, gender, or location of the tumour.

::: columns
::: {.column width="50%"}
![](../results/05_pca_scree_plot.png){width="530" height="306"}

![](../results/05_pca_gender.png){width="537" height="320"}
:::

::: {.column width="50%"}
![](../results/05_pca_Dukes_stages.png)

![](../results/05_pca_location.png){width="520" height="275"}
:::
:::

## Gene regulation and metastasis analysis

### Aim

Identify genes that are significantly up- or down-regulated between the patients with/without metastasis

::: columns
::: {.column width="40%" style="font-size: 22px"}
1.  Pivot the data
2.  Group per gene and nest the data
3.  Fit a linear model per gene
4.  Tidy the fitted model and get confidence intervals
5.  Extract the model parameters and correct for multiple testing
:::

::: {.column width="60%" style="font-size: 22px"}
```{r}
#| echo: true
#| eval: false
data_long_nested <- data |>
  select(ends_with("_at"), metastasis) |> 
  pivot_longer(cols = ends_with("_at"), 
               names_to = "gene", 
               values_to = "log2_expr_level") |> 
  group_by(gene) |> 
  nest() |> 
  ungroup()

data_long_nested <- data_long_nested |> 
  group_by(gene) |> 
  mutate(model_object = map(.x = data,
                   .f = ~lm(formula = log2_expr_level ~ metastasis,
                            data = .x))) |> 
  ungroup() |> 
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~tidy(x =.x,
                                            conf.int = TRUE,
                                            conf.level = 0.95)))

estimates <- data_long_nested |> 
  unnest(model_object_tidy) |> 
  filter(term == "metastasis") |> 
  select("gene", "p.value", "estimate", "conf.low", "conf.high") |> 
  mutate(q.value = p.adjust(p.value),
         is_significant = case_when(q.value > 0.05 ~ "no",
                                    q.value <= 0.05 ~ "yes"))

```
:::
:::

## Gene regulation and metastasis analysis

-   No gene found to be significant after multiple testing

-   Use the genes with p\<0.01 for the plot

-   20 genes (12 up regulated, 8 down regulated)

![](../results/06_analysis_volcano.png)

## Analysis of Disease-Free Survival in relation to Tumor Location

::: columns
::: {.column width="50%" style="font-size: 22px"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2|3|4"
dfs_loc_plot <- data |>
  group_by(DFS_label) |>
  count(Location) |>
  ggplot(mapping = aes(x = Location, y = n, fill=DFS_label)) +
  geom_col(position = "dodge", alpha=0.5, color="black") +
  theme_minimal() +
  theme(
    legend.position = "right",
    axis.text.x = element_text(angle = 10, vjust = 1, hjust=1),
    panel.grid.major.x = element_blank(),  # Remove major vertical grid lines for a cleaner graph
    panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines for a cleaner graph
  ) +
  scale_y_continuous(breaks = seq(0, 20, by=2)) + # Show more ticks on the y axis to make the graph easier to read
  labs(
    title = "Distribution of Disease-Free Survival Events by Sample Location",
    subtitle = "Analysis of colorectal cancer samples",
    x = "Location of sample",
    y = "Number of samples",
    fill = NULL,
    caption = "Data: https://www.kaggle.com/datasets/amandam1/colorectal-cancer-patients/data"
  )
```
:::

::: {.column width="50%" style="font-size: 22px"}
![](../results/07_analysis_3.png)
:::
:::

## Conclusion:

-   No clear clustering

-   No significantly expressed genes

-   Tumor located in the rectum shown to be more aggressive
