---
title: "Group 11 - Gene expression in colorectal cancer"
author: "Eleni-Sofia Tseperi (s240066),	Johanne Lund	(s233246), Marie Picquet	(s233736), Eglantine Anton	(s233242), Qiuyan Wu	(s241063)"
format:
  revealjs:
    code-line-numbers: true
    scrollable: true
    smaller: true
    scoll: true
    theme: night
    transition: slide
    incremental: true 
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(readr)
library(broom)
library(here)
library(ggrepel)
```

## Introduction

-   Background

    -   Colorectal cancer (CRC) is a major cause of cancer mortality

    -   Gene expression analysis can help identify dysregulated genes

-   Goal of the project

    -   Investigate xxx

    -   Model xxx

-   Data sets

    -   Gene expression level for 1935 genes

    -   Patient information for 62 patients

    -   Artificially made dirty and messy to increase the difficulty of the projects

## Methods overview

(incl run-all file), raw, load, making dirty

## Methods - Tidy, clean & augment
::::: columns
### Tidy
::: {.column width="50%" height="auto" style="font-size: 22px"}
Expression data

-   The columns represent observations and the rows variables
    -   Pivot the data set
```{r}
#| echo: true
#| eval: false
expr_data <- expr_data |>
  mutate(ID_GENE = ID_REF) |>
  select(-ID_REF, -...1) |> 
  pivot_longer(-c(ID_GENE), 
               names_to = "ID_REF", 
               values_to = "Gene expression level") |>
  pivot_wider(names_from = ID_GENE, 
              values_from = "Gene expression level") 
```

:::

::: {.column width="50%" height="auto" style="font-size: 22px"}
Patient data

-    Separate  `DFS event/Adj_Radio/Adj_Chem` into 3 distinct variables

-   Observations of column `DFS (in years and months)` contains two values

    -   Convert into months to have only value per observation 
:::
::: {.column width="100%" height="auto" style="font-size: 22px"}
Combine the two data sets by joining on the patient ID.
:::

### Clean

:::: columns
::: {.column width="100%" height="auto" style="font-size: 22px"}
-   Handle Missing Values

    -   Convert all missing values "N/A" and "NA"such cases to `NA` when opening the file

-   Standardize Gender Labels

    -   Convert M to Male and F to Female

-   Fix Invalid Age Values

    -   One patient has an age `< 0` and replace it with the mean of the valid ages.

-   Simplify Column Names

    -   Remove "gene\_" at the beginning of all the gene names

    -   Remove the units from the names and replace spaces by \_
:::
::::

### Augment

:::: columns
::: {.column width="100%" height="auto" style="font-size: 22px"}
-   Create an `age_group` variable
```{r}
#| echo: true
#| eval: false
data <- data |>mutate(Age_group = cut(Age, breaks = seq(10, 100, by = 10)))
```
-   Create a `metastasis` variable
```{r}
#| echo: true
#| eval: false
data <- data |>
  mutate(No_stage = case_when(Dukes_stage == "A" ~ 1,
                            Dukes_stage == "B" ~ 2,
                            Dukes_stage == "C" ~ 3,
                            Dukes_stage == "D" ~ 4),
         metastasis = case_when(No_stage <= 3 ~ 0,
                                No_stage > 3 ~ 1))
```

-   Create an `DFS_label` variable
```{r}
#| echo: true
#| eval: false
data <- data |>
  mutate(DFS_label = case_when(DFS_event == 0 ~ "No return of disease",
                            DFS_event == 1 ~ "Return of disease"), .after = DFS_event)
:::
::::
:::::
## Methods - Describe

## Results - Data description

## Methods - Analysis 1

## Methods - Analysis 2

## Methods - Analysis 3

## Results - Analysis 1 & 2

## Results - Analysis 3 & discussion
